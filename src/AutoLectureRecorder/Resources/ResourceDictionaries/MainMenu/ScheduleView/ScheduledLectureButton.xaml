<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:AutoLectureRecorder.Resources.ResourceDictionaries.MainMenu.ScheduleView.Converters">
    
    <converters:TimeRangeConverter x:Key="TimeRangeConverter" />
    <converters:WhenTrueCollapsedConverter x:Key="WhenTrueCollapsedConverter" />
    <converters:WhenTrueVisibleConverter x:Key="WhenTrueVisibleConverter" />
    
    <Style x:Key="ScheduledLectureButton" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid.OpacityMask>
                            <VisualBrush Visual="{Binding ElementName=MainBorder}" />
                        </Grid.OpacityMask>
                        
                        <Border x:Name="MainBorder" 
                            CornerRadius="7" 
                            BorderBrush="{DynamicResource PrimaryDarkerHoverBrush}"
                            Background="{DynamicResource SecondaryBackgroundBrush}"/> 
                        
                         <Border x:Name="ContentBorder"
                            HorizontalAlignment="Stretch"
                            CornerRadius="15"
                            Background="{DynamicResource SecondaryBackgroundBrush}"
                            Padding="7"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}">       
                             
                            <StackPanel x:Name="MainStackPanel" 
                                    VerticalAlignment="Top"
                                    HorizontalAlignment="Center"
                                    Margin="2">
         
                                <Border Height="35">
                                    <TextBlock x:Name="SubjectNameTextBlock"
                                           Text="{TemplateBinding Content}"
                                           VerticalAlignment="Center"
                                           TextAlignment="Center" 
                                           TextWrapping="Wrap"
                                           TextTrimming="CharacterEllipsis"
                                           FontSize="14"
                                           Foreground="{DynamicResource MaterialDesignBody}">
                                    </TextBlock>
                                </Border>
                            
                                <TextBlock x:Name="TimeTextBlock" 
                                           Margin="0, 7, 0, 0"
                                           FontSize="12"
                                           TextAlignment="Center"
                                           Foreground="{DynamicResource MaterialDesignBody}">
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource TimeRangeConverter}">
                                            <Binding Path="StartTime" />
                                            <Binding Path="EndTime" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>

                                <StackPanel x:Name="CheckboxesStackPanel"
                                            Margin="0, 7, 0, 0"
                                            Orientation="Horizontal"
                                            HorizontalAlignment="Center"
                                            Cursor="Arrow">
                                    <CheckBox x:Name="ActiveCheckBox" 
                                              Content="Active"
                                              Padding="0,0,0,0"
                                              VerticalAlignment="Bottom"
                                              FontSize="13"
                                              Foreground="{DynamicResource MaterialDesignBody}"
                                              IsChecked="{Binding Path=IsScheduled}">
                                    </CheckBox>

                                    <CheckBox x:Name="UploadCheckBox" 
                                              Content="Upload"
                                              Margin="2, 0, 0, 0"
                                              VerticalAlignment="Bottom"
                                              FontSize="13"
                                              Foreground="{DynamicResource MaterialDesignBody}"
                                              IsChecked="{Binding Path=WillAutoUpload}"/>
                                </StackPanel>
                            </StackPanel>
                        </Border>
                        
                        <Border x:Name="LeftSidebarActiveBorder" 
                            Width="7"
                            HorizontalAlignment="Left"
                            Background="{DynamicResource SuccessBrush}"
                            Visibility="{Binding IsScheduled, Converter={StaticResource WhenTrueVisibleConverter}}"/>
                        
                        <Border x:Name="LeftSidebarInactiveBorder" 
                            Width="7"
                            HorizontalAlignment="Left"
                            Background="{DynamicResource SecondaryTextBrush}"
                            Visibility="{Binding IsScheduled, Converter={StaticResource WhenTrueCollapsedConverter}}"/>
                    </Grid>
                   
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="ContentBorder" Value="{DynamicResource ButtonHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Background" TargetName="ContentBorder" Value="{DynamicResource ButtonHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.38"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>