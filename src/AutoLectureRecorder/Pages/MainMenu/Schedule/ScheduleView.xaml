<rxui:ReactiveUserControl 
    x:Name="MainScheduleView"
    x:Class="AutoLectureRecorder.Pages.MainMenu.Schedule.ScheduleView"
    x:TypeArguments="local:ScheduleViewModel"
    xmlns:rxui="http://reactiveui.net"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:local="clr-namespace:AutoLectureRecorder.Pages.MainMenu.Schedule"
    xmlns:converters="clr-namespace:AutoLectureRecorder.Pages.MainMenu.Schedule.Converters"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:xf="clr-namespace:XamlFlair;assembly=XamlFlair.WPF"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    Background="{DynamicResource MaterialDesignPaper}"
    FontFamily="{materialDesign:MaterialDesignFont}"
    TextElement.FontWeight="Medium"
    TextElement.FontSize="14"
    mc:Ignorable="d"
    d:DesignWidth="1360"
    d:DesignHeight="768">
    
    <Border xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn}, Duration=500}"
            Margin="0, 30, 0, 0"
            BorderBrush="{DynamicResource PrimaryBrush}"
            BorderThickness="0"
            Background="{DynamicResource MaterialDesignPaper}">
        
        <Grid x:Name="MainGrid">
            <Grid.Resources>
                <converters:TimeRangeConverter x:Key="TimeRangeConverter" />
                <converters:WhenTrueCollapsedConverter x:Key="WhenTrueCollapsedConverter" />
                <converters:WhenTrueVisibleConverter x:Key="WhenTrueVisibleConverter" />
                
                <CollectionViewSource x:Key="GroupedLecturesCvs"
                                      Source="{Binding Path=AllScheduledLectures}">
                    <CollectionViewSource.GroupDescriptions>
                        <PropertyGroupDescription PropertyName="Day"></PropertyGroupDescription>
                    </CollectionViewSource.GroupDescriptions>
                </CollectionViewSource>
                
                <Style x:Key="ScheduledLectureButton" TargetType="{x:Type Button}">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border>
                                    <Grid>
                                        <Grid.OpacityMask>
                                            <VisualBrush Visual="{Binding ElementName=MainBorder}" />
                                        </Grid.OpacityMask>
                                        
                                        <Border x:Name="MainBorder" 
                                            CornerRadius="7" 
                                            BorderBrush="{DynamicResource PrimaryDarkVariantBrush}"
                                            Background="{DynamicResource SurfaceBrush}">
                                        </Border> 
                                        
                                         <Border x:Name="ContentBorder"
                                            HorizontalAlignment="Stretch"
                                            CornerRadius="15"
                                            Background="{DynamicResource SurfaceBrush}"
                                            Padding="7"
                                            Height="{TemplateBinding Height}"
                                            Width="{TemplateBinding Width}">       
                                             
                                            <StackPanel x:Name="MainStackPanel" 
                                                    VerticalAlignment="Top"
                                                    HorizontalAlignment="Center"
                                                    Margin="2">
                         
                                                <Border Height="35">
                                                    <TextBlock x:Name="SubjectNameTextBlock"
                                                           Text="{TemplateBinding Content}"
                                                           VerticalAlignment="Center"
                                                           TextAlignment="Center" 
                                                           TextWrapping="Wrap"
                                                           TextTrimming="CharacterEllipsis"
                                                           FontSize="14"
                                                           Foreground="{DynamicResource MaterialDesignBody}">
                                                    </TextBlock>
                                                </Border>
                                            
                                                <TextBlock x:Name="TimeTextBlock" 
                                                           Margin="0, 7, 0, 0"
                                                           FontSize="12"
                                                           TextAlignment="Center"
                                                           Foreground="{DynamicResource MaterialDesignBody}">
                                                    <TextBlock.Text>
                                                        <MultiBinding Converter="{StaticResource TimeRangeConverter}">
                                                            <Binding Path="StartTime" />
                                                            <Binding Path="EndTime" />
                                                        </MultiBinding>
                                                    </TextBlock.Text>
                                                </TextBlock>

                                                <StackPanel x:Name="CheckboxesStackPanel"
                                                            Margin="0, 7, 0, 0"
                                                            Orientation="Horizontal"
                                                            HorizontalAlignment="Center"
                                                            Cursor="Arrow">
                                                    <CheckBox x:Name="ActiveCheckBox" 
                                                              Content="Active"
                                                              Padding="0,0,0,0"
                                                              VerticalAlignment="Bottom"
                                                              FontSize="13"
                                                              Foreground="{DynamicResource MaterialDesignBody}"
                                                              IsChecked="{Binding Path=IsScheduled}"
                                                              Checked="CheckBox_OnCheckedChanged"
                                                              Unchecked="CheckBox_OnCheckedChanged">
                                                    </CheckBox>

                                                    <CheckBox x:Name="UploadCheckBox" 
                                                              Content="Upload"
                                                              Margin="2, 0, 0, 0"
                                                              VerticalAlignment="Bottom"
                                                              FontSize="13"
                                                              Foreground="{DynamicResource MaterialDesignBody}"
                                                              IsChecked="{Binding Path=WillAutoUpload}"
                                                              Checked="CheckBox_OnCheckedChanged"
                                                              Unchecked="CheckBox_OnCheckedChanged"/>
                                                </StackPanel>
                                            </StackPanel>
                                        </Border>
                                        
                                        <Border x:Name="LeftSidebarActiveBorder" 
                                            Width="7"
                                            HorizontalAlignment="Left"
                                            Background="{DynamicResource SuccessBrush}"
                                            Visibility="{Binding IsScheduled, Converter={StaticResource WhenTrueVisibleConverter}}"/>
                                        
                                        <Border x:Name="LeftSidebarInactiveBorder" 
                                            Width="7"
                                            HorizontalAlignment="Left"
                                            Background="{DynamicResource OnBackgroundSecondaryBrush}"
                                            Visibility="{Binding IsScheduled, Converter={StaticResource WhenTrueCollapsedConverter}}"/>
                                    </Grid>               
                                    <Border.Effect>
                                        <DropShadowEffect ShadowDepth="0"
                                                          BlurRadius="10"
                                                          Opacity="0.1"
                                                          Direction="-75" />
                                    </Border.Effect>
                                </Border>
                               
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" TargetName="ContentBorder" Value="{DynamicResource OnSurfaceHoverBrush}"/>
                                    </Trigger>
                                    <Trigger Property="IsKeyboardFocused" Value="true">
                                        <Setter Property="Background" TargetName="ContentBorder" Value="{DynamicResource OnSurfaceHoverBrush}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Opacity" Value="0.38"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                
                <DataTemplate x:Key="ScheduledLectureTemplate">
                    <Button Content="{Binding Path=SubjectName}"
                            Height="105"
                            Width="auto"
                            Margin="4"
                            Style="{StaticResource ScheduledLectureButton}"
                            Command="{Binding DataContext.NavigateToUpdateScheduledLecture, 
                                                              ElementName=AllLecturesItemsControl}"
                            CommandParameter="{Binding Path=.}">
                    </Button>
                </DataTemplate>
                
                <Style x:Key="DayContainerStyle" TargetType="{x:Type GroupItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <!--Background="{DynamicResource SecondaryBackgroundBrush}"-->
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    
                                    <TextBlock Grid.Column="0" Grid.Row="0"
                                               Text="{Binding Path=Name}"
                                               FontSize="18"
                                               TextAlignment="Center"
                                               Padding="0, 25"
                                               Background="{DynamicResource PrimaryBrush}"
                                               Foreground="{DynamicResource OnPrimaryBrush}"/>
                                    
                                    <ScrollViewer x:Name="DayLecturesScrollViewer" 
                                                  Grid.Column="0" Grid.Row="1"
                                                  Margin="2, 4, 2, 0"
                                                  VerticalScrollBarVisibility="Hidden"
                                                  HorizontalScrollBarVisibility="Disabled">
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Grid.Resources>
            
            <ItemsControl x:Name="AllLecturesItemsControl"
                          ItemsSource="{Binding Source={StaticResource GroupedLecturesCvs}}"
                          ItemTemplate="{StaticResource ScheduledLectureTemplate}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel
                            Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                
                <ItemsControl.GroupStyle>
                    <GroupStyle ContainerStyle="{StaticResource DayContainerStyle}">
                        <GroupStyle.Panel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="7" />
                            </ItemsPanelTemplate>
                        </GroupStyle.Panel>
                    </GroupStyle>
                </ItemsControl.GroupStyle>
            </ItemsControl>
        </Grid>
    </Border>
</rxui:ReactiveUserControl>
