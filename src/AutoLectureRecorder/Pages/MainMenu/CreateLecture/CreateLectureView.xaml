<rxui:ReactiveUserControl 
    x:Class="AutoLectureRecorder.Pages.MainMenu.CreateLecture.CreateLectureView"
    x:TypeArguments="local:CreateLectureViewModel"
    xmlns:rxui="http://reactiveui.net"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:xf="clr-namespace:XamlFlair;assembly=XamlFlair.WPF"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:local="clr-namespace:AutoLectureRecorder.Pages.MainMenu.CreateLecture"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    Background="{DynamicResource MaterialDesignPaper}"
    FontFamily="{materialDesign:MaterialDesignFont}"
    TextElement.FontWeight="Normal"
    TextElement.FontSize="14"
    mc:Ignorable="d"
    d:DesignWidth="1160"
    d:DesignHeight="768">
    <materialDesign:DialogHost x:Name="ConfirmationDialogHost" 
                               CloseOnClickAway="True">
        <materialDesign:DialogHost.DialogContent>
            <Border Padding="30">
                <StackPanel>
                    <TextBlock x:Name="DialogTitleTextBlock"
                               Text="Warning: Overlapping lecture detected"
                               FontWeight="Bold"
                               FontSize="22"
                               Margin="0, 0, 0, 15"/>
                    <TextBlock x:Name="DialogContentTextBlock"
                               FontSize="18"
                               TextWrapping="Wrap"
                               MaxWidth="600"
                               Margin="0, 0, 0, 25"
                               Foreground="{DynamicResource SecondaryTextBrush}">
                        There is a nice little warning about the start time and end time overlapping with
                        an existing lecture. If you add this lecture the conflicting lectures will be deactivated.
                    </TextBlock>
                    <StackPanel Orientation="Horizontal"
                                HorizontalAlignment="Right">
                        <Button Style="{StaticResource MaterialDesignFlatButton}"
                                Foreground="{DynamicResource OnBackgroundBrush}"
                                Opacity="0.6"
                                FontSize="16"
                                IsCancel="True"
                                Margin="0, 0, 10, 0"
                                Content="CANCEL"
                                Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"/>
                        <Button x:Name="ProceedInsertionAnywayButton"  
                                Background="{DynamicResource PrimaryBrush}"
                                Foreground="{DynamicResource OnPrimaryBrush}"
                                FontSize="16"
                                Content="ADD ANYWAY"/>
                        <Button x:Name="ProceedUpdateAnywayButton"  
                                Background="{DynamicResource PrimaryBrush}"
                                Foreground="{DynamicResource OnPrimaryBrush}"
                                FontSize="16"
                                Content="UPDATE ANYWAY"/>
                    </StackPanel>
                </StackPanel>
            </Border>
        </materialDesign:DialogHost.DialogContent>
        <Grid>

            <d:Grid d:Width="135"
                    d:Height="30"
                    d:Background="Black"
                    d:HorizontalAlignment="Right"
                    d:VerticalAlignment="Top" />

            <StackPanel Grid.Column="0"
                        Margin="35">

                <!-- Subject Details -->
                <Grid xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn}, Duration=200}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="580" />
                    </Grid.ColumnDefinitions>

                    <!-- Subject Information -->
                    <StackPanel Grid.Column="0">
                        <TextBlock x:Name="CreateTitleTextBlock" 
                                   Text="Create new lecture entry "
                                   FontSize="30"
                                   TextElement.FontWeight="Medium" />
                        <TextBlock x:Name="UpdateTitleTextBlock" 
                                   Text="Update the lecture entry "
                                   FontSize="30"
                                   TextElement.FontWeight="Medium"
                                   Visibility="Collapsed"/>

                        <TextBlock Text="Subject details"
                                   FontSize="22"
                                   TextElement.FontWeight="Medium"
                                   Margin="0,20,0,0" />
                        <TextBlock Text="Information about the scheduled lecture"
                                   MaxWidth="340"
                                   HorizontalAlignment="Left"
                                   TextWrapping="Wrap"
                                   FontSize="16"
                                   Foreground="{DynamicResource OnBackgroundSecondaryBrush}" />
                    </StackPanel>

                    <!-- Subject Fields -->
                    <StackPanel Grid.Column="1"
                                TextElement.FontWeight="Medium"
                                Margin="0,62,0,0">
                        <StackPanel Orientation="Horizontal">

                            <StackPanel>
                                <Grid ToolTipService.InitialShowDelay="300">

                                    <Grid.ToolTip>
                                        <TextBlock>
                                            Select the subject name or write it out if it doesn't already exist
                                            <LineBreak /> <LineBreak />
                                            Warning: If you have multiple lectures of the same subject on different 
                                            days or hours
                                            <LineBreak />
                                            You should create a different lecture entry for each one and choose the same 
                                            subject, in order for the recordings to be grouped correctly
                                            <LineBreak /> <LineBreak />
                                            For Example: If you have computer science at 8 AM on Monday and 10AM on 
                                            Tuesday you should add them in the following manner:
                                            <LineBreak />
                                            1. Write out Computer Science as subject name in the Subject Name field. 
                                            Then fill out the rest of the fields and click Create Lecture
                                            <LineBreak />
                                            2. Now that you have already created a lecture with Computer Science 
                                            as the subject, 
                                            <LineBreak />
                                            in order to add a second lecture with different time or day, 
                                            select Computer Science as Subject Name and fill in the rest of the 
                                            fields for the second lecture
                                        </TextBlock>
                                    </Grid.ToolTip>

                                    <ComboBox x:Name="SubjectNameComboBox"
                                              Text="{Binding ValidatableScheduledLecture.SubjectName, 
                                                             UpdateSourceTrigger=PropertyChanged}"
                                              IsEditable="True"
                                              IsTextSearchEnabled="True"
                                              DisplayMemberPath="SubjectName"
                                              materialDesign:HintAssist.Hint="Subject Name"
                                              Width="390"
                                              Padding="16,16,55,16"
                                              Margin="0, 0, 0, 10"
                                              Style="{StaticResource MaterialDesignOutlinedComboBox}">
                                    </ComboBox>

                                    <Image Source="../../../Resources/Icons/CreateLecture/question_mark.png"
                                           Width="22"
                                           HorizontalAlignment="Right"
                                           Margin="0,0,15,15" />
                                </Grid>
                            </StackPanel>

                            <StackPanel>
                                <ComboBox x:Name="SemesterComboBox"
                                          Text="{Binding ValidatableScheduledLecture.Semester, 
                                                             UpdateSourceTrigger=PropertyChanged}"
                                          materialDesign:HintAssist.Hint="Semester"
                                          VerticalAlignment="Top"
                                          HorizontalAlignment="Left"
                                          Margin="15,0,0,0"
                                          Width="175"
                                          Style="{StaticResource MaterialDesignOutlinedComboBox}">
                                    <ComboBoxItem Content="1" />
                                    <ComboBoxItem Content="2" />
                                    <ComboBoxItem Content="3" />
                                    <ComboBoxItem Content="4" />
                                    <ComboBoxItem Content="5" />
                                    <ComboBoxItem Content="6" />
                                    <ComboBoxItem Content="7" />
                                    <ComboBoxItem Content="8" />
                                    <ComboBoxItem Content="9" />
                                    <ComboBoxItem Content="10" />
                                </ComboBox>
                            </StackPanel>
                            
                        </StackPanel>

                        <Grid Margin="0,15,0,0"
                              ToolTipService.InitialShowDelay="300">

                            <Grid.ToolTip>
                                <TextBlock>
                                    If you don't have the microsoft teams link you can get it in the following
                                    <LineBreak />
                                    manner (assuming you have already joined the team).
                                    <LineBreak />
                                    &#160;&#160;&#160; 1. Open the Microsoft Teams app and log in
                                    <LineBreak />
                                    &#160;&#160;&#160; 2. Click the "Teams" button in the left hand navigation menu
                                    <LineBreak />
                                    &#160;&#160;&#160; 3. Find the team you want to schedule lectures for
                                    <LineBreak />
                                    &#160;&#160;&#160; 4. Click on the 3 dots in the upper right corner of the box
                                    <LineBreak />
                                    &#160;&#160;&#160; 5. Click on "Get Link To Team"<LineBreak />
                                    If you are not member of a team and you only have a meeting link, just paste that link
                                </TextBlock>
                            </Grid.ToolTip>

                            <TextBox x:Name="MeetingLinkTextBox"
                                     Text="{Binding ValidatableScheduledLecture.MeetingLink, 
                                                             UpdateSourceTrigger=PropertyChanged}"
                                     materialDesign:HintAssist.Hint="Team or Meeting Link"
                                     Style="{StaticResource MaterialDesignOutlinedTextBox}"
                                     Padding="16,16,55,16" 
                                     Margin="0, 0, 0, 5"/>

                            <Image Source="../../../Resources/Icons/CreateLecture/question_mark.png"
                                   Width="22"
                                   HorizontalAlignment="Right"
                                   Margin="0,0,15,5" />
                        </Grid>
                        
                    </StackPanel>
                </Grid>

                <!-- Horizontal Line 1 -->
                <Grid xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn}, Duration=200}" 
                      Height="0.5"
                      Margin="0,25"
                      Background="{DynamicResource SecondaryBrush}">
                </Grid>

                <!-- Day - Time Details -->
                <Grid xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn}, Duration=200, Delay=200}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="580" />
                    </Grid.ColumnDefinitions>

                    <!-- Day - Time Information -->
                    <StackPanel Grid.Column="0">
                        <TextBlock Text="Day - Time Details"
                                   TextElement.FontWeight="Medium"
                                   FontSize="22" />
                        <TextBlock Text="Information about the day and time the lecture takes place"
                                   MaxWidth="340"
                                   HorizontalAlignment="Left"
                                   TextWrapping="Wrap"
                                   FontSize="16"
                                   Foreground="{DynamicResource OnBackgroundSecondaryBrush}" />
                    </StackPanel>

                    <!-- Day - Time Fields -->
                    <StackPanel Grid.Column="1"
                                TextElement.FontWeight="Medium">
                        <ComboBox x:Name="DayComboBox"
                                  Text="{Binding ValidatableScheduledLecture.Day, 
                                                             UpdateSourceTrigger=PropertyChanged}"
                                  materialDesign:HintAssist.Hint="Day"
                                  Margin="0, 0, 0, 10"
                                  Foreground="{DynamicResource OnBackgroundBrush}"
                                  Style="{StaticResource MaterialDesignOutlinedComboBox}">

                            <ComboBoxItem Content="Monday" />
                            <ComboBoxItem Content="Tuesday" />
                            <ComboBoxItem Content="Wednesday" />
                            <ComboBoxItem Content="Thursday" />
                            <ComboBoxItem Content="Friday" />
                            <ComboBoxItem Content="Saturday" />
                            <ComboBoxItem Content="Sunday" />

                        </ComboBox>

                        <StackPanel Orientation="Horizontal"
                                    HorizontalAlignment="Stretch"
                                    Margin="0,15,0,0">
                            <materialDesign:TimePicker x:Name="StartTimePicker"
                                                       SelectedTime="{Binding ValidatableScheduledLecture.StartTimeForView, 
                                                             UpdateSourceTrigger=PropertyChanged}"
                                                       materialDesign:HintAssist.Hint="Start Time"
                                                       Width="282.5"
                                                       Style="{StaticResource MaterialDesignOutlinedTimePicker}" />
                            <materialDesign:TimePicker x:Name="EndTimePicker"
                                                       SelectedTime="{Binding ValidatableScheduledLecture.EndTimeForView, 
                                                             UpdateSourceTrigger=PropertyChanged}"
                                                       materialDesign:HintAssist.Hint="End Time"
                                                       Width="282.5"
                                                       Margin="15,0,0,0"
                                                       Style="{StaticResource MaterialDesignOutlinedTimePicker}" />
                        </StackPanel>

                        <TextBlock x:Name="TimeErrorTextBlock"
                                   Margin="5,17,0,0"
                                   TextWrapping="Wrap"
                                   HorizontalAlignment="Center"
                                   Text="{Binding ValidatableScheduledLecture.TimeError, 
                                                             UpdateSourceTrigger=PropertyChanged}"
                                   Foreground="{DynamicResource ErrorBrush}" />

                        <TextBlock x:Name="TimeWarningTextBlock"
                                   Margin="5,17,0,0"
                                   Visibility="Collapsed"
                                   TextWrapping="Wrap"
                                   HorizontalAlignment="Center"
                                   Text="{Binding ValidatableScheduledLecture.TimeError, 
                                                             UpdateSourceTrigger=PropertyChanged}"
                                   Foreground="{DynamicResource WarningBrush}" />

                    </StackPanel>
                </Grid>
                
                <!-- Horizontal Line 2 -->
                <Grid Height="0.5"
                      Margin="0,25"
                      Background="{DynamicResource SecondaryBrush}">
                </Grid>

                <!-- Lecture Settings -->
                <Grid xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn}, Duration=200, Delay=400}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="580" />
                    </Grid.ColumnDefinitions>

                    <!-- Lecture Settings Information -->
                    <StackPanel Grid.Column="0">
                        <TextBlock Text="Settings"
                                   TextElement.FontWeight="Medium"
                                   FontSize="22" />
                        <TextBlock MaxWidth="340"
                                   HorizontalAlignment="Left"
                                   TextWrapping="Wrap"
                                   FontSize="16"
                                   Foreground="{DynamicResource OnBackgroundSecondaryBrush}">
                            Information about whether the lecture will be scheduled immediately
                            and whether it will be automatically uploaded
                        </TextBlock>
                    </StackPanel>

                    <!-- Lecture Settings Fields -->
                    <StackPanel Grid.Column="1"
                                HorizontalAlignment="Stretch"
                                TextElement.FontWeight="Medium">
                        <StackPanel Orientation="Horizontal">
                            <ToggleButton x:Name="AutoUploadToggleButton"
                                          IsChecked="{Binding ValidatableScheduledLecture.WillAutoUpload}" />
                            <TextBlock Text="Automatically upload to the cloud"
                                       Foreground="{DynamicResource MaterialDesignBody}"
                                       Margin="15,0,0,0" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal"
                                    Margin="0,15,0,0">
                            <ToggleButton x:Name="IsScheduledToggleButton"
                                          IsChecked="{Binding ValidatableScheduledLecture.IsScheduled}" />
                            <TextBlock Text="Schedule lecture for recording"
                                       Foreground="{DynamicResource MaterialDesignBody}"
                                       Margin="15,0,0,0" />
                        </StackPanel>
                    </StackPanel>
                </Grid>
                
            </StackPanel>
            
            <!-- Submit button -->
            <Grid xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn}, Duration=200, Delay=600}"
                  Margin="35"
                  d:Panel.ZIndex="-2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="580" />
                </Grid.ColumnDefinitions>

                <Button x:Name="CreateButton"
                        Grid.Column="1"
                        d:Height="50"
                        Height="{Binding ElementName=DayComboBox, Path=ActualHeight}"
                        VerticalAlignment="Bottom"
                        Cursor="Hand"
                        FontSize="18"
                        Foreground="{DynamicResource OnPrimaryBrush}"
                        Content="Create Lecture">
                    <Button.Background>
                        <LinearGradientBrush EndPoint="1,1"
                                             StartPoint="0,0">
                            <GradientStop Color="{DynamicResource PrimaryColor}" />
                            <GradientStop Color="{DynamicResource PrimaryDarkVariantColor}"
                                          Offset="1" />
                        </LinearGradientBrush>
                    </Button.Background>
                </Button>

                <Button x:Name="UpdateButton"
                        Grid.Column="1"
                        d:Visibility="Collapsed"
                        d:Height="50"
                        Height="{Binding ElementName=DayComboBox, Path=ActualHeight}"
                        VerticalAlignment="Bottom"
                        Cursor="Hand"
                        FontSize="18"
                        Foreground="{DynamicResource OnPrimaryBrush}"
                        Content="Update Lecture">
                    <Button.Background>
                        <LinearGradientBrush EndPoint="1,1"
                                             StartPoint="0,0">
                            <GradientStop Color="{DynamicResource PrimaryColor}" />
                            <GradientStop Color="{DynamicResource PrimaryDarkVariantColor}"
                                          Offset="1" />
                        </LinearGradientBrush>
                    </Button.Background>
                </Button>
            </Grid>

            <!-- Success and Failure Snackbars -->
            <materialDesign:Snackbar x:Name="InsertionFailedSnackbar"
                                     Message="Lecture failed to be added..."
                                     d:IsActive="false"
                                     Background="{DynamicResource ErrorBrush}"
                                     Foreground="{DynamicResource OnErrorBrush}"
                                     Margin="0,0,0,20"/>

            <materialDesign:Snackbar x:Name="InsertionSucceededSnackbar"
                                     Message="Lecture added successfully!"
                                     d:IsActive="false"
                                     Background="{DynamicResource SuccessBrush}"
                                     Foreground="{DynamicResource OnSuccessBrush}"
                                     Margin="0,0,0,20" />

            <!-- Update and Failure Snackbars -->
            <materialDesign:Snackbar x:Name="UpdateFailedSnackbar"
                                     Message="Lecture failed to be updated..."
                                     d:IsActive="false"
                                     Background="{DynamicResource ErrorBrush}"
                                     Foreground="{DynamicResource OnErrorBrush}"
                                     Margin="0,0,0,20"/>

            <materialDesign:Snackbar x:Name="UpdateSucceededSnackbar"
                                     Message="Lecture was updated successfully!"
                                     d:IsActive="false"
                                     Background="{DynamicResource SuccessBrush}"
                                     Foreground="{DynamicResource OnSuccessBrush}"
                                     Margin="0,0,0,20" />
        </Grid>
    </materialDesign:DialogHost>
</rxui:ReactiveUserControl>
